# .circleci/config.yml
#
# This file configures the CircleCI 2.0 build.
#
# Documentation:
# - Overview: https://circleci.com/docs/2.0/workflows/
# - Caching: https://circleci.com/docs/2.0/caching/
#
# Things to know:
# - every job is a container
# - cache is used for data that can potentially be reused between builds, provided we can
#   be sure it will not influence the build result other than by speeding it up.
# - cache is immutable. Sometimes we need to flush the cache, but we can't. That's why there is this
#   `v1-` at the beginning. Increment it when you need to change the cache content.
# - because we use `npm ci`, we cache the `~/.npm` directory and not `node_modules` which
#   is erased by `npm ci`.
# - to make sure the cache is indexed by the `package.json` and `package-lock.json` files,
#   we concatenate them into a temporary file whose checksum we use as part of the cache key.
# - for data that is specific to a build (commit), like the source code downloaded from github,
#   we use Circle CI's workspace feature to transport it between jobs.

version: 2.1

executors:
  node-docker:
    parameters:
      node-version:
        # renovate datasource=node-version depName=node
        default: 18.16.1
        type: string
    docker:
      - image: cimg/node:<<parameters.node-version>>
    resource_class: small
  node-postgres-docker:
    parameters:
      node-version:
        # renovate datasource=node-version depName=node
        default: 18.16.1
        type: string
    docker:
      - image: cimg/node:<<parameters.node-version>>
      - image: postgres:14.9-alpine
        name: pg-api
        environment:
          POSTGRES_USER: circleci
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: postgres:14.9-alpine
        name: pg-datamart
        environment:
          POSTGRES_USER: circleci
          POSTGRES_HOST_AUTH_METHOD: trust
    resource_class: small

workflows:
  version: 2
  build-and-test:
    jobs:
      - checkout

      - api_build_and_test:
          requires:
            - checkout

jobs:
  checkout:
    executor:
      name: node-docker
    working_directory: ~/pix-api-data
    steps:
      - checkout
      - run:
          name: Install
          command: |
            npm ci
            rm -rf .git/
      - persist_to_workspace:
          root: ~/pix-api-data
          paths:
            - .

  api_build_and_test:
    executor:
      name: node-postgres-docker
    working_directory: ~/pix-api-data
    steps:
      - attach_workspace:
          at: ~/pix-api-data
      - run: cat package*.json > cachekey
      - restore_cache:
          keys:
            - v7-api-npm-{{ checksum "cachekey" }}
      - run: npm ci --no-optional
      - save_cache:
          key: v7-api-npm-{{ checksum "cachekey" }}
          paths:
            - ~/.npm
      - run:
          name: Import Datamart Data
          command: psql -h pg-datamart -U circleci -p 5432 -d circleci < ./data/sql/init_db.sql
      - run:
          name: Lint
          command: npm run lint
          environment:
            TEST_DATABASE_API_URL: postgres://circleci@pg-api:5432/circleci
            TEST_DATABASE_DATAMART_URL: postgres://circleci@pg-datamart:5432/circleci
          when: always
      - run:
          name: Test
          command: npm run test
          environment:
            TEST_DATABASE_API_URL: postgres://circleci@pg-api:5432/circleci
            TEST_DATABASE_DATAMART_URL: postgres://circleci@pg-datamart:5432/circleci
          when: always
      - run:
          name: Build
          command: npm run build
          when: always
      - store_test_results:
          path: /home/circleci/test-results
      - store_artifacts:
          path: /home/circleci/test-results
